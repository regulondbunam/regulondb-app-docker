version: "3"

services:
  flask:
    container_name: "regulondb12_app-flask"
    build:
      context: .
      dockerfile: Dockerfile
      target: flask_app
      args:
        API_URL: /graphql
    image: regulondbapp-flask
    depends_on:
      - datamartsApi
    networks:
      - regulondbapp
  
  proxy:
    container_name: "regulondb12_app-nginx"
    build:
      context: .
      dockerfile: Dockerfile
      target: proxy
    image: regulondbapp-nginx
    ports:
      - "7000:80"
    depends_on:
      - web
      - datamartsApi
    networks:
      - regulondbapp

  web:
    container_name: "regulondb12_app-react"
    build:
      context: .
      dockerfile: Dockerfile
      target: webapp
      args:
        API_URL: /graphql
        FLASK_URL: /wdps
    image: regulondbapp-react
    depends_on:
      - datamartsApi
      - db
      - flask
    networks:
      - regulondbapp

  htApi:
    container_name: "regulondb12_app-graphql-ht"
    build:
      context: .
      dockerfile: Dockerfile
      target: graphql-ht
    image: regulondbapp-graphql-ht
    env_file:
      - ./ht-api-variables.env
    depends_on:
      - db
    networks:
      - regulondbapp

  datamartsApi:
    container_name: "regulondb12_app-graphql-dm"
    build:
      context: .
      dockerfile: Dockerfile
      target: graphql-dm
    image: regulondbapp-graphql
    env_file:
      - ./api-variables.env
    depends_on:
      - htApi
      - db
    networks:
      - regulondbapp

  db:
    container_name: "regulondb12_app-mongodb"
    build:
      context: .
      dockerfile: Dockerfile
      target: mongo
    image: regulondbapp-mongo
    networks:
      - regulondbapp

networks:
  regulondbapp:
    driver: bridge
